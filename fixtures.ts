import mongoose from 'mongoose';
import config from './config';
import User from './models/User';
import Post from './models/Post';
import Reply from './models/Reply';

const dropCollection = async (
  db: mongoose.Connection,
  collectionName: string
) => {
  try {
    await db.dropCollection(collectionName);
  } catch (e) {
    console.log(`Collection ${collectionName} was missing, skipping drop....`);
  }
};

const collections = ['users', 'posts', 'replies'];

const run = async () => {
  await mongoose.connect(config.mongoose.db);
  const db = mongoose.connection;

  for (const collection of collections) {
    await dropCollection(db, collection);
  }

  const [user1, user2, user3, user4, user5] = await User.create(
    {
      alatooID: 208715045,
      name: 'Aibika Sabyrkulova',
      password: '12345',
      avatar:
        'https://i.pinimg.com/736x/6f/0c/7d/6f0c7dd236a49fef3d2c7ad9def7f87c.jpg',
      role: 'student',
      liked_posts: [],
      liked_replies: [],
      following: [],
      followers: [],
    },
    {
      alatooID: 208715046,
      name: 'Sultan Dzholdoshbaev',
      password: '12345',
      avatar: null,
      role: 'student',
      liked_posts: [],
      liked_replies: [],
      following: [],
      followers: [],
    },
    {
      alatooID: 208715047,
      name: 'Sadyr Japarov',
      password: '12345',
      avatar:
        'https://i.pinimg.com/736x/5e/5c/21/5e5c21722209fd7f04fae339a2e830f1.jpg',
      role: 'teacher',
      liked_posts: [],
      liked_replies: [],
      following: [],
      followers: [],
    },
    {
      alatooID: 208715048,
      name: 'Kyzzhibek Kanybekova',
      password: '12345',
      avatar:
        'https://i.pinimg.com/736x/06/22/c7/0622c7b35454a3916004f7f3b56e52ad.jpg',
      role: 'student',
      liked_posts: [],
      liked_replies: [],
      following: [],
      followers: [],
    },
    {
      alatooID: 208715049,
      name: 'Ivan ivanov',
      password: '12345',
      avatar:
        'https://i.pinimg.com/736x/bc/72/08/bc72080d9d0a704105afe08586dfa010.jpg',
      role: 'student',
      liked_posts: [],
      liked_replies: [],
      following: [],
      followers: [],
    }
  );

  const [post1, post2, post3] = await Post.create(
    {
      image:
        'https://i.pinimg.com/736x/20/60/85/206085b0387bdab4900a7f6f48766fe6.jpg',
      text: '–ö–∞–∂–¥—ã–π —Ä–∞–∑ –≥–æ–≤–æ—Ä–∏—à—å —Å–µ–±–µ: "–í —ç—Ç–æ—Ç —Ä–∞–∑ –Ω–∞—á–Ω—É –∑–∞—Ä–∞–Ω–µ–µ!"... –ò –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Ä–∞–±–æ—Ç–∞–µ—à—å –¥–æ 3 –Ω–æ—á–∏ –∑–∞ –¥–µ–Ω—å –¥–æ —Å–¥–∞—á–∏. üòÖ –ö–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —ç—Ç–∞ –Ω–æ—á—å? –ó–∞–ø–∞—Å—ã –∫–æ—Ñ–µ, –º–µ—à–∫–∏ –ø–æ–¥ –≥–ª–∞–∑–∞–º–∏ –∏ Wi-Fi, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–∞—Ç–µ–ª—å—Å–∫–∏ —Ç—É–ø–∏—Ç.',
      author: user1._id,
      createdAt: new Date().toISOString(),
      likes: [],
      replies: [],
    },
    {
      image: null,
      text: '–ö–æ–ø–ª—é –Ω–∞ Porsche 911 Turbo S üèéÔ∏è –¥–µ–Ω—å –ø–µ—Ä–≤—ã–π',
      author: user2._id,
      createdAt: new Date().toISOString(),
      likes: [],
      replies: [],
    },
    {
      image: null,
      text: '–≠—Ç–æ, –∫–æ–Ω–µ—á–Ω–æ, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ, –∫–æ–≥–¥–∞ —è –µ–∑–∂—É –ø–æ –ï–≤—Ä–æ–ø–µ, –æ–Ω–∏ –≥–æ–≤–æ—Ä—è—Ç –æ–¥–Ω–æ, –Ω–æ –¥–µ–ª–∞—é—Ç –¥—Ä—É–≥–æ–µ. –°–∞–º–∏ —Ç–æ–∂–µ. –ï—Å—Ç—å –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—Ö–æ–¥—è—Ç –≤ –ù–ê–¢–û –∏–ª–∏ –ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–π —Å–æ—é–∑, –æ–Ω–∏ –∂–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—é—Ç —Å –†–æ—Å—Å–∏–µ–π. –ê –Ω–∞–º –æ–Ω–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –∏–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å, —É–∫–∞–∑—ã–≤–∞—Ç—å –∏–ª–∏ –ø—Ä–æ—Å–∏—Ç—å, —á—Ç–æ–±—ã –º—ã –Ω–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–ª–∏ —Å –†–æ—Å—Å–∏–µ–π –∏–ª–∏ —Å –°–ù–ì',
      author: user3._id,
      createdAt: new Date().toISOString(),
      likes: [],
      replies: [],
    },
    {
      image: null,
      text: "Many of you liked my content and I'm thankful! Follow for more! ^^",
      author: user4._id,
      createdAt: new Date().toISOString(),
      likes: [],
      replies: [],
    },
    {
      image: null,
      text: "–ö–∞–∂–¥—ã–π —Ä–∞–∑ –æ–±–µ—â–∞–µ—à—å —Å–µ–±–µ: '–í —ç—Ç–æ—Ç —Ä–∞–∑ –≤—Å—ë —Å–¥–µ–ª–∞—é –∑–∞—Ä–∞–Ω–µ–µ!'... –ò –∫–∞–∂–¥—ã–π —Ä–∞–∑ –≤ –∏—Ç–æ–≥–µ –∫–æ–¥–∏—à—å –¥–æ —Ä–∞—Å—Å–≤–µ—Ç–∞, —É–ø–∏–≤–∞—è—Å—å –ª–∏—Ç—Ä–∞–º–∏ –∫–æ—Ñ–µ, —Å –≥–ª–∞–∑–∞–º–∏ –∫—Ä–∞—Å–Ω—ã–º–∏, –∫–∞–∫ —É —Å–æ–≤—ã. –ê Wi-Fi, –∫–æ–Ω–µ—á–Ω–æ –∂–µ, —Ä–µ—à–∞–µ—Ç, —á—Ç–æ —Å–∞–º–æ–µ –≤—Ä–µ–º—è —É—Å—Ç—Ä–æ–∏—Ç—å –∑–∞–±–∞—Å—Ç–æ–≤–∫—É. üòÖ",
      author: user5._id,
      createdAt: new Date().toISOString(),
      likes: [],
      replies: [],
    }
  );

  const [reply1, reply2] = await Reply.create(
    {
      image: null,
      text: '—É –º–µ–Ω—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–æ—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ —Ç–∞–∫',
      author: user2._id,
      createdAt: new Date().toISOString(),
      likes: [],
      replies: [],
      toPost: post1._id,
      toReply: null,
    },
    {
      image: null,
      text: '–£–¥–∞—á–∏, –Ω–∞–¥–µ—é—Å—å —É —Ç–µ–±—è –ø–æ–ª—É—á–∏—Ç—Å—è',
      author: user1._id,
      createdAt: new Date().toISOString(),
      likes: [],
      replies: [],
      toPost: post2._id,
      toReply: null,
    }
  );

  await Post.findByIdAndUpdate(post1._id, { $push: { replies: reply1._id } });
  await Post.findByIdAndUpdate(post2._id, { $push: { replies: reply2._id } });

  // await User.findByIdAndUpdate(user1._id, {
  //   $push: { liked_posts: post2._id },
  // });
  // await Post.findByIdAndUpdate(post2._id, {
  //   $push: { likes: user1._id },
  // });

  // await User.findByIdAndUpdate(user2._id, {
  //   $push: { liked_posts: post1._id },
  // });
  // await Post.findByIdAndUpdate(post1._id, {
  //   $push: { likes: user2._id },
  // });

  // await User.findByIdAndUpdate(user2._id, {
  //   $push: { liked_replies: reply2._id },
  // });
  // await Reply.findByIdAndUpdate(reply2._id, {
  //   $push: { likes: user2._id },
  // });

  // await User.findByIdAndUpdate(user2._id, {
  //   $push: { liked_replies: reply1._id },
  // });
  // await Reply.findByIdAndUpdate(reply1._id, {
  //   $push: { likes: user2._id },
  // });

  // await User.findByIdAndUpdate(user1._id, {
  //   $push: { following: user2._id },
  // });
  // await User.findByIdAndUpdate(user2._id, {
  //   $push: { followers: user1._id },
  // });

  await db.close();
};

void run();
